{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aseName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "sqlServerName": {
      "type": "string"
    },
    "sqlServerAdministratorLogin": {
      "type": "string"
    },
    "sqlServerAdministratorLoginPassword": {
      "type": "securestring"
    },
    "vnetName": {
      "type": "securestring"
    },
    "eshopSubnetName": {
      "type": "securestring"
    },
    "appInsightsName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "redisCacheName": {
      "type": "string"
    },
    "aspName": {
      "type": "string"
    },
    "webAppName": {
      "type": "string"
    },
    "contentAppName": {
      "type": "string"
    },
    "apiAppName": {
      "type": "string"
    },
    "adminAppName": {
      "type": "string"
    },
    "azureAdTenantId": {
      "type": "string"
    },
    "azureAdClientId": {
      "type": "string"
    },
    "cdnWebAppEndpointName": {
      "type": "string"
    },
    "cdnStorageEndpointName": {
      "type": "string"
    },
    "sourceCodeRepositoryURL": {
      "type": "string"
    },
    "sourceCodeBranch": {
      "type": "string"
    },
    "sourceCodeManualIntegration": {
      "type": "bool"
    }
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/hostingEnvironments",
      "name": "[parameters('aseName')]",
      "location": "[parameters('location')]",
      "kind": "ASEV2",
      "properties": {
        "name": "[parameters('aseName')]",
        "location": "[parameters('location')]",
        "virtualNetwork": {
          "Id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
          "Subnet": "[parameters('eshopSubnetName')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/serverfarms",
      "name": "[parameters('aspName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "properties": {
        "name": "[parameters('aspName')]",
        "workerSize": "0",
        "workerSizeId": "0",
        "numberOfWorkers": "1",
        "reserved": false,
        "hostingEnvironment": "[parameters('aseName')]"
      },
      "sku": {
        "tier": "Isolated",
        "name": "I1"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/hostingEnvironments/', parameters('aseName'))]"
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('webAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "hostingEnvironment": "[parameters('aseName')]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "ODataServiceBaseUrl",
              "value": "[concat('http://', reference(resourceId('Microsoft.Web/sites/', parameters('apiAppName'))).defaultHostName)]"
            },
            {
              "name": "cdn:url",
              "value": "[concat('https://', parameters('cdnWebAppEndpointName'), '.azureedge.net')]"
            },
            {
              "name": "CatalogBaseUrl",
              "value": "[concat('https://', parameters('cdnStorageEndpointName'), '.azureedge.net')]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "project",
              "value": "e-shop-website-with-ilb-ase/src/Web/Web.csproj"
            }
          ],
          "connectionstrings": [
            {
              "name": "CatalogConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Initial Catalog=Catalog;Persist Security Info=False;User ID=', parameters('sqlServerAdministratorLogin'), ';Password=', parameters('sqlServerAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            {
              "name": "SalesConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Initial Catalog=Sales;Persist Security Info=False;User ID=', parameters('sqlServerAdministratorLogin'), ';Password=', parameters('sqlServerAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            {
              "name": "IdentityConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Initial Catalog=Identity;Persist Security Info=False;User ID=', parameters('sqlServerAdministratorLogin'), ';Password=', parameters('sqlServerAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            {
              "name": "StorageConnection",
              "type": "Custom",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]"
            },
            {
              "name": "RedisConnection",
              "type": "Custom",
              "connectionString": "[concat(parameters('redisCacheName'), '.redis.cache.windows.net:6380,password=', listKeys(resourceId('Microsoft.Cache/Redis/', parameters('redisCacheName')), '2016-04-01').primaryKey, ',ssl=True,abortConnect=False')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "properties": {
            "RepoUrl": "[parameters('sourceCodeRepositoryURL')]",
            "branch": "[parameters('sourceCodeBranch')]",
            "IsManualIntegration": "parameters('sourceCodeManualIntegration')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('webAppName'))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Cache/Redis/', parameters('redisCacheName'))]",
        "[resourceId('Microsoft.Web/sites/', parameters('apiAppName'))]"
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('contentAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('contentAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "hostingEnvironment": "[parameters('aseName')]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "project",
              "value": "e-shop-website-with-ilb-ase/src/Web/wwwroot"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "properties": {
            "RepoUrl": "[parameters('sourceCodeRepositoryURL')]",
            "branch": "[parameters('sourceCodeBranch')]",
            "IsManualIntegration": "parameters('sourceCodeManualIntegration')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('contentAppName'))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]"
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('apiAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('apiAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "hostingEnvironment": "[parameters('aseName')]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "project",
              "value": "e-shop-website-with-ilb-ase/src/API/API.csproj"
            }
          ],
          "connectionstrings": [
            {
              "name": "SalesConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Initial Catalog=Sales;Persist Security Info=False;User ID=', parameters('sqlServerAdministratorLogin'), ';Password=', parameters('sqlServerAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "properties": {
            "RepoUrl": "[parameters('sourceCodeRepositoryURL')]",
            "branch": "[parameters('sourceCodeBranch')]",
            "IsManualIntegration": "parameters('sourceCodeManualIntegration')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('apiAppName'))]",
            "[resourceId('Microsoft.Web/sites/sourcecontrols/', parameters('webAppName'), 'web')]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]"
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('adminAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('adminAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "hostingEnvironment": "[parameters('aseName')]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureAd:Domain",
              "value": ""
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('azureAdTenantId')]"
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('azureAdClientId')]"
            },
            {
              "name": "ODataServiceBaseUrl",
              "value": "[concat('http://', reference(resourceId('Microsoft.Web/sites/', parameters('apiAppName'))).defaultHostName)]"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "project",
              "value": "e-shop-website-with-ilb-ase/src/Admin/Admin.csproj"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "properties": {
            "RepoUrl": "[parameters('sourceCodeRepositoryURL')]",
            "branch": "[parameters('sourceCodeBranch')]",
            "IsManualIntegration": "parameters('sourceCodeManualIntegration')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('adminAppName'))]",
            "[resourceId('Microsoft.Web/sites/sourcecontrols/', parameters('apiAppName'), 'web')]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', parameters('aspName'))]",
        "[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/sites/', parameters('apiAppName'))]"
      ]
    }
  ],
  "outputs": {
    "webAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites/', parameters('webAppName'))]"
    },
    "contentAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites/', parameters('contentAppName'))]"
    },
    "adminAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites/', parameters('adminAppName'))]"
    }
  }
}